<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhang.weibo.mapper.PostMapper">

    <select id="getFollowsPosts" resultType="com.zhang.weibo.entity.Post">
        SELECT p.id,tag,content,images,p.created,userId,u.name as userName,u.avatar,
            (SELECT COUNT(id) FROM likes WHERE postId = p.id) as likes,
            (SELECT COUNT(id) FROM comments WHERE postId = p.id) as comments,
            (SELECT p.userId in (SELECT followeeId FROM follows WHERE followerId = #{uid})) as isFollowed,
            (SELECT p.id in (SELECT postId FROM likes WHERE userId = #{uid})) as isLiked
        FROM posts as p JOIN users as u ON p.userId = u.id
        WHERE userId IN (SELECT followeeId FROM follows WHERE followerId = #{uid})
        ORDER BY created DESC LIMIT #{page},10
    </select>

    <insert id="addPost">
        INSERT INTO `weibo`.`posts` (`userId`, `tag`, `content`, `images`,`created`)
        VALUES (#{userId}, #{tag}, #{content}, #{images}, #{created});
    </insert>

    <select id="searchPosts" resultType="com.zhang.weibo.entity.Post">
        SELECT p.id,tag,content,images,p.created,userId,u.name as userName,u.avatar,
               (SELECT COUNT(id) FROM likes WHERE postId = p.id) as likes,
               (SELECT COUNT(id) FROM comments WHERE postId = p.id) as comments,
               (SELECT p.userId in (SELECT followeeId FROM follows WHERE followerId = #{uid})) as isFollowed,
               (SELECT p.id in (SELECT postId FROM likes WHERE userId = #{uid})) as isLiked
        FROM posts as p JOIN users as u ON p.userId = u.id
        WHERE content like #{text}
    </select>

    <insert id="likePost">
        INSERT INTO likes (`userId`, `postId`, `created`) VALUES (#{uid}, #{pid}, #{time});
    </insert>

    <delete id="likeDelete">
        DELETE FROM likes WHERE userId = #{uid} AND postId = #{pid}
    </delete>

    <select id="recommendPosts" resultType="com.zhang.weibo.entity.Post">
        SELECT p.id,tag,content,images,p.created,userId,u.name as userName,u.avatar,
               (SELECT COUNT(id) FROM likes WHERE postId = p.id) as likes,
               (SELECT COUNT(id) FROM comments WHERE postId = p.id) as comments,
               (SELECT p.userId in (SELECT followeeId FROM follows WHERE followerId = #{uid})) as isFollowed,
               (SELECT p.id in (SELECT postId FROM likes WHERE userId = #{uid})) as isLiked
        FROM posts as p JOIN users as u ON p.userId = u.id
        ORDER BY likes DESC LIMIT 10
    </select>

    <select id="getPostsByUser" resultType="com.zhang.weibo.entity.Post">
        SELECT p.id,tag,content,images,p.created,userId,u.name as userName,u.avatar,
               (SELECT COUNT(id) FROM likes WHERE postId = p.id) as likes,
               (SELECT COUNT(id) FROM comments WHERE postId = p.id) as comments,
               (SELECT p.userId in (SELECT followeeId FROM follows WHERE followerId = #{uid})) as isFollowed,
               (SELECT p.id in (SELECT postId FROM likes WHERE userId = #{uid})) as isLiked
        FROM posts as p JOIN users as u ON p.userId = u.id
        WHERE p.userId = #{uid}
        ORDER BY p.created DESC
    </select>
</mapper>
